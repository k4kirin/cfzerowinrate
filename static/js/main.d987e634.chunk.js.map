{"version":3,"sources":["Author.js","Guide.js","Calc.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Author","class","href","React","Component","Guide","props","style","float","width","marginRight","marginTop","CLANS","state","level","curExp","wins","expType","totalExp","losses","clan","nation","errorLv","errorXp","errorWin","type","value","this","setState","updateLv","updateXp","updateWin","event","handleChange","target","i","length","isNaN","parseInt","marginLeft","for","color","id","onChange","handleLvChange","bind","handleXpChange","Math","floor","handleWinChange","handleClanChange","map","toFixed","Header","className","App","document","title","Calc","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d987e634.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass Author extends React.Component{\r\n\trender(){\r\n\t\treturn(<div class=\"author\">\r\n\tMade by <a href=\"http://k4kirin.github.io\">k4kirin</a>\r\n\t\t</div>);\r\n\t}\r\n}\r\n  \r\nexport default Author","/*\n\ncd desktop/coding/react/cfzerowinrate\n\ngit add .\n\ngit commit\n\ngit push origin master\n\n*/\n\nimport React, { Component } from 'react'\nimport './App.css';\n\nclass Guide extends Component {\n  constructor(props) {\n    super(props);\n  }\n\t\n\trender() {\n\t\treturn(\t\t\n\t\t<div style={{float: \"right\", width: \"45%\", marginRight: \"2%\", marginTop: \"1%\"}}>\n\t\t\tTo access these statistics, follow these instructions.<br/><br/>\n\t\t\tOn the <b>home page</b>, press <b>Menu</b>, then <b>Profile</b>.<br/><br/>\n\t\t\tFrom here, press the clan you would like to see, then it will tell you your <b>clan level, experience, and wins.</b><br/><br/>\n\t\t\tUse these three numbers to put into the calculator, and you will get your win rate!<br/><br/>\n\t\t\tKeep in mind, these will count your matches when you are facing a VP Farmer, and when you are VP Farming, as well.<br/><br/>\n\t\t\tPS. With the inclusion of tournaments, <b>this calculator will be inaccurate if you've ever used the deck in a tournament</b>.<br/><br/>\n\t\t\tThis is because the game will not count wins for you in tournaments, while still getting experience. So, if you have ever won with that clan in the tournament mode, the calculation will be skewed into showing that you lost more than you did.<br/><br/>\n\t\t\tIf you do remember how many times you've won with that clan during tournaments, you should include it as well for accuracy.<br/><br/>\n\t\t</div>\n\t\t);\n  }\n\n}\n\nexport default Guide;\n","/*\n\ncd desktop/coding/react/cfzerowinrate\n\nnpm start\n\ngit add .\n\ngit commit\n\ngit push origin master\n\n*/\n\nimport React, { Component } from 'react'\nimport './App.css';\n\nconst MAX_LEVEL = 50;\nconst CLANS = [\"\",\n\t\"Royal Paladin\",\"Oracle Think Tank\",\"Shadow Paladin\",\"Gold Paladin\",\"Angel Feather\",\"Genesis\",\n\t\"Kagero\",\"Narukami\",\"Tachikaze\",\"Murakumo\",\"Nubatama\",\n\t\"Nova Grappler\",\"Dimension Police\",\"Link Joker\",\n\t\"Granblue\",\"Bermuda Triangle\",\"Aqua Force\",\n\t\"Dark Irregulars\",\"Pale Moon\",\"Spike Brothers\",\"Gear Chronicle\",\n\t\"Neo Nectar\",\"Great Nature\",\"Megacolony\"];\n\nclass Guide extends Component {\n  constructor(props) {\n    super(props);\n\tvar level = 0;\n\tvar curExp = 0;\n\tvar wins = 0;\n\tvar totalExp = 0;\n\tvar losses = 0;\n\tvar expType = 0;\n\tthis.state = {\n\t\tlevel: 0,\n\t\tcurExp: 0,\n\t\twins: 0,\n\t\texpType: 0,\n\t\ttotalExp: 0,\n\t\tlosses: 0,\n\t\tclan: \"\",\n\t\tnation: \"white\",\n\t\terrorLv: false,\n\t\terrorXp: false,\n\t\terrorWin: false,\n\t}\n  }\n\thandleChange(type,value){\n\t\tthis.setState({\n\t\t\terrorLv: false,\n\t\t\terrorXp: false,\n\t\t\terrorWin: false,\n\t\t});\n\t\tthis.updateLv(type==\"lv\"?value:this.state.level);\n\t\tthis.updateXp(type==\"xp\"?value:this.state.curExp);\n\t\tthis.updateWin(type==\"win\"?value:this.state.wins);\n\t\tthis.setState ({\n\t\t\tlevel: this.level,\n\t\t\tcurExp: this.curExp,\n\t\t\twins: this.wins,\n\t\t\texpType: this.expType,\n\t\t\ttotalExp: this.totalExp,\n\t\t\tlosses: this.losses,\n\t\t});\n\t}\n\thandleLvChange(event){\n\t\tthis.handleChange(\"lv\",event.target.value);\n\t}\n\thandleXpChange(event){\n\t\tthis.handleChange(\"xp\",event.target.value);\n\t}\n\thandleWinChange(event){\n\t\tthis.handleChange(\"win\",event.target.value);\n\t}\n\thandleClanChange(event){\n\t\tvar i;\n\t\tvar clan=event.target.value;\n\t\tvar nation;\n\t\tfor(i=0;i<CLANS.length;i++)\n\t\t\tif(clan==CLANS[i])\n\t\t\t\tbreak;\n\t\tif(i==0)nation=\"white\";\n\t\telse if(i<=6)nation=\"yellow\";\n\t\telse if(i<=11)nation=\"red\";\n\t\telse if(i<=14)nation=\"grey\";\n\t\telse if(i<=17)nation=\"blue\";\n\t\telse if(i<=21)nation=\"purple\";\n\t\telse nation=\"green\";\n\t\tthis.setState({\n\t\t\tclan: clan,\n\t\t\tnation: nation,\n\t\t});\n\t}\n\tupdateLv(level){\n\t\tif(isNaN(level) || level<0 || level>50){\n\t\t\tthis.setState({\n\t\t\t\terrorLv: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tlevel=parseInt(level);\n\t\tvar expType = 0;\n\t\tif(level<5) expType = 1;\n\t\telse if (level < 10) expType = 2;\n\t\telse if (level < 15) expType = 3;\n\t\telse if (level < 20) expType = 4;\n\t\telse if (level < 50) expType = 5;\n\t\tthis.level = level;\n\t\tthis.expType = expType;\n\t}\n\tupdateXp(curExp){\n\t\tif(isNaN(curExp) || curExp<0 || curExp>this.expType*100){\n\t\t\tthis.setState({\n\t\t\t\terrorXp: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tcurExp=parseInt(curExp);\n\t\tvar totalExp = 0;\n\t\tfor(var i=1;i<=this.level;i++){\n\t\t\tif(i<=5) totalExp += 100;\n\t\t\telse if (i <= 10) totalExp += 200;\n\t\t\telse if (i <= 15) totalExp += 300;\n\t\t\telse if (i <= 20) totalExp += 400;\n\t\t\telse totalExp += 500;\n\t\t}\n\t\ttotalExp+=curExp;\n\t\tthis.totalExp=totalExp;\n\t\tthis.curExp=curExp;\n\t}\n\tupdateWin(wins){\n\t\tif(isNaN(wins) || wins<0 || wins>this.totalExp/20){\n\t\t\tthis.setState({\n\t\t\t\terrorWin: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\twins=parseInt(wins);\n\t\tvar lossExp = this.totalExp - wins*20;\n\t\tvar losses = lossExp/10;\n\t\tthis.wins = wins;\n\t\tthis.losses = losses;\n\t}\n\t\n\trender() {\n\t\treturn(\n\t\t\t<div style={{float: \"left\", width: \"45%\", marginLeft: \"2%\", marginTop: \"1%\"}}>\n\t\t\t\t<label for=\"level\">Clan level (0-{MAX_LEVEL}): </label>\n\t\t\t\t<input style={{color: this.state.errorLv?\"red\":\"black\"}} type=\"text\" id=\"level\" onChange={this.handleLvChange.bind(this)}></input><br/>\n\t\t\t\t<label for=\"curExp\">Current experience (0-{this.state.expType*100}): </label>\n\t\t\t\t<input style={{color: this.state.errorXp?\"red\":\"black\"}} type=\"text\" id=\"curExp\" onChange={this.handleXpChange.bind(this)}></input><br/>\n\t\t\t\t<label for=\"wins\">Wins (0-{Math.floor(this.state.totalExp/20)}): </label>\n\t\t\t\t<input style={{color: this.state.errorWin?\"red\":\"black\"}} type=\"text\" id=\"wins\" onChange={this.handleWinChange.bind(this)}></input><br/>\n\t\t\t\t<label for=\"clan\">Clan (optional): </label>\n\t\t\t\t<select id=\"clan\" onChange={this.handleClanChange.bind(this)}>\n\t\t\t\t\t{CLANS.map(CLANS =>\n\t\t\t\t\t\t<option value={CLANS}>{CLANS}</option>\n\t\t\t\t\t)}\n\t\t\t\t</select><br/>\n\t\t\t\t<h2 style={{color: this.state.nation}}>\n\t\t\t\t\t{this.state.clan}<br/>\n\t\t\t\t\tWins : Losses<br/>\n\t\t\t\t\t{this.state.wins} : {this.state.losses}<br/>\n\t\t\t\t\tWin Rate: {this.state.wins==0?0:(this.state.wins*100/(this.state.wins+this.state.losses)).toFixed(2)}%<br/>\n\t\t\t\t</h2>\n\t\t\t\tClan level: {this.state.level}<br/>\n\t\t\t\tCurrent experience: {this.state.curExp}<br/>\n\t\t\t\tTotal experience: {this.state.totalExp}<br/>\n\t\t\t\tGames played: {this.state.wins + this.state.losses}<br/>\n\t\t\t</div>\n\t\t);\n  }\n\n}\n\nexport default Guide;\n","import React, { Component } from 'react'\nimport './App.css';\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<h1>Cardfight!! Vanguard ZERO<br/>Win Rate Calculator</h1>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport Author from './Author';\nimport Guide from './Guide';\nimport Calc from './Calc';\nimport Header from './Header';\nimport './App.css';\n\nexport default class App extends Component {\n  componentDidMount(){\n    document.title = \"Cardfight!! Vanguard ZERO Win Rate Calculator\"\n  }\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Author/>\n\t\t\t\t<Header/>\n\t\t\t\t<Calc/>\n\t\t\t\t<Guide/>\n\t\t\t</div>\n\t\t)\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}