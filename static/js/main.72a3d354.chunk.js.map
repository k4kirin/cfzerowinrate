{"version":3,"sources":["Author.js","Guide.js","Calc.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Author","class","href","React","Component","Guide","props","style","float","width","marginRight","marginTop","CLANS","Calc","state","level","expType","curExp","totalExp","wins","losses","errLv","errXp","errWin","clan","nation","type","value","this","setState","lvUpdate","xpUpdate","winUpdate","event","handleUpdate","target","i","length","parseInt","Number","isInteger","winExp","marginLeft","for","name","onChange","handleLvUpdate","bind","color","handleXpUpdate","Math","floor","handleWinUpdate","id","handleNameUpdate","map","toFixed","Header","className","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72a3d354.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass Author extends React.Component{\r\n\trender(){\r\n\t\treturn(<div class=\"author\">\r\n\tMade by <a href=\"http://k4kirin.github.io\">k4kirin</a>\r\n\t\t</div>);\r\n\t}\r\n}\r\n  \r\nexport default Author","/*\n\ncd desktop/coding/react/cfzerowinrate\n\ngit add .\n\ngit commit\n\ngit push origin master\n\n*/\n\nimport React, { Component } from 'react'\nimport './App.css';\n\nclass Guide extends Component {\n  constructor(props) {\n    super(props);\n  }\n\t\n\trender() {\n\t\treturn(\t\t\n\t\t<div style={{float: \"right\", width: \"30%\", marginRight: \"5%\", marginTop: \"1%\"}}>\n\t\t\tTo access these statistics, follow these instructions.<br/><br/>\n\t\t\tOn the <b>home page</b>, press <b>Menu</b>, then <b>Profile</b>.<br/><br/>\n\t\t\tFrom here, press the clan you would like to see, then it will tell you your <b>clan level, experience, and wins.</b><br/><br/>\n\t\t\tUse these three numbers to put into the calculator, and you will get your win rate!\n\t\t</div>\n\t\t);\n  }\n\n}\n\nexport default Guide;\n","/*\n\ncd desktop/coding/react/cfzerowinrate\n\ngit add .\n\ngit commit\n\ngit push origin master\n\n*/\n\nimport React, { Component } from 'react'\nimport './App.css';\n\nconst MAX_LEVEL = 50;\nconst CLANS = [\"\",\"Royal Paladin\",\"Oracle Think Tank\",\"Shadow Paladin\",\"Gold Paladin\",\"Angel Feather\",\"Genesis\",\"Kagero\",\n\t\"Murakumo\",\"Narukami\",\"Tachikaze\",\"Nubatama\",\"Nova Grappler\",\"Dimension Police\",\"Link Joker\",\"Granblue\",\"Bermuda Triangle\",\n\t\"Spike Brothers\",\"Pale Moon\",\"Dark Irregulars\",\"Gear Chronicle\",\"Neo Nectar\",\"Great Nature\",\"Megacolony\"];\n\nclass Calc extends Component {\n  constructor(props) {\n    super(props);\n\tvar level = 0;\n\tvar expType = 1;\n\tvar curExp = 0;\n\tvar totalExp = 0;\n\tvar wins = 0;\n\tvar losses = 0;\n    this.state = {\n\t\tlevel: 0,\n\t\texpType: 1,\n\t\tcurExp: 0,\n\t\ttotalExp: 0,\n\t\twins: 0,\n\t\tlosses: 0,\n\t\terrLv: false,\n\t\terrXp: false,\n\t\terrWin: false,\n\t\tclan: \"\",\n\t\tnation: \"white\",\n    };\n  }\n  \n\thandleUpdate(type, value){\n\t\tthis.setState({\n\t\t\terrLv: false,\n\t\t\terrXp: false,\n\t\t\terrWin: false,\n\t\t});\n\t\tthis.lvUpdate(type==\"lv\"?value:this.state.level);\n\t\tthis.xpUpdate(type==\"xp\"?value:this.state.curExp);\n\t\tthis.winUpdate(type==\"win\"?value:this.state.wins);\n\t\tthis.setState({\n\t\t\tlevel: this.level,\n\t\t\texpType: this.expType,\n\t\t\tcurExp: this.curExp,\n\t\t\ttotalExp: this.totalExp,\n\t\t\twins: this.wins,\n\t\t\tlosses: this.losses,\n\t\t});\n\t}\n\thandleLvUpdate(event){\n\t\tthis.handleUpdate(\"lv\",event.target.value);\n\t}\n\thandleXpUpdate(event){\n\t\tthis.handleUpdate(\"xp\",event.target.value);\n\t}\n\thandleWinUpdate(event){\n\t\tthis.handleUpdate(\"win\",event.target.value);\n\t}\n\thandleNameUpdate(event){\n\t\tvar clan = event.target.value;\n\t\tvar nation = \"\";\n\t\tvar i;\n\t\tfor(i=0;i<CLANS.length;i++){\n\t\t\tif(clan==CLANS[i]) break;\n\t\t}\n\t\tif(i==0) nation=\"white\";\n\t\telse if(i<=6) nation=\"yellow\";\n\t\telse if(i<=11) nation=\"red\";\n\t\telse if(i<=14) nation=\"grey\";\n\t\telse if(i<=17) nation=\"blue\";\n\t\telse if(i<=21) nation=\"purple\";\n\t\telse nation=\"green\";\n\t\tthis.setState({\n\t\t\tclan: clan,\n\t\t\tnation: nation,\n\t\t});\n\t}\n\tlvUpdate(level){\n\t\tlevel = parseInt(level);\n\t\tif(!Number.isInteger(parseInt(level)) || level<0 || level>50){\n\t\t\tthis.setState({\n\t\t\t\terrLv: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tvar expType = 5;\n\t\tfor(var i=4;i>=1;i--)\n\t\t\tif(level < 5*i)\n\t\t\t\texpType = i;\n\t\tif(level == 50) expType = 0;\n\t\tthis.level = parseInt(level);\n\t\tthis.expType = parseInt(expType);\n\t}\n\t\n\txpUpdate(curExp){\n\t\tcurExp = parseInt(curExp);\n\t\tif(!Number.isInteger(parseInt(curExp)) || curExp<0 || curExp>this.expType*100 || curExp%10!=0){\n\t\t\tthis.setState({\n\t\t\t\terrXp: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tvar totalExp = 0;\n\t\tfor (var i=1;i<=this.level;i++){\n\t\t\tif(i<=5) totalExp+=100;\n\t\t\telse if(i<=10) totalExp+=200;\n\t\t\telse if(i<=15) totalExp+=300;\n\t\t\telse if(i<=20) totalExp+=400;\n\t\t\telse totalExp+=500;\n\t\t}\n\t\ttotalExp+=curExp;\n\t\tthis.curExp=curExp;\n\t\tthis.totalExp=totalExp;\n\t}\n\t\n\twinUpdate(wins){\n\t\twins=parseInt(wins);\n\t\tif(!Number.isInteger(parseInt(wins)) || wins<0 || wins>this.totalExp/20){\n\t\t\tthis.setState({\n\t\t\t\terrWin: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tvar winExp = wins*20;\n\t\tvar lossExp = this.totalExp - winExp;\n\t\tvar losses = lossExp/10;\n\t\tthis.wins=wins;\n\t\tthis.losses=losses;\n\t}\n\t\n\t\n\trender() {\n\t\treturn(\t\t\n\t\t<div style={{float: \"left\", marginLeft: \"5%\", marginTop: \"1%\"}}>\n\t\t\t<label for=\"lv\">Clan level (0-50): </label>\n\t\t\t<input type=\"text\" name=\"lv\" onChange={this.handleLvUpdate.bind(this)}\n\t\t\tstyle={{color: this.state.errLv ? 'red' : 'black'}}></input>\n\t\t\t<br/>\n\t\t\t\n\t\t\t<label for=\"exp\">Experience (0-{this.state.expType*100}): </label>\n\t\t\t<input type=\"text\" name=\"exp\" onChange={this.handleXpUpdate.bind(this)}\n\t\t\tstyle={{color: this.state.errXp ? 'red' : 'black'}}></input>\n\t\t\t<br/>\n\t\t\t\n\t\t\t<label for=\"wins\">Wins (0-{Math.floor(this.state.totalExp/20)}): </label>\n\t\t\t<input type=\"text\" name=\"wins\" onChange={this.handleWinUpdate.bind(this)}\n\t\t\tstyle={{color: this.state.errWin ? 'red' : 'black'}}></input>\n\t\t\t<br/>\n\t\t\t\n\t\t\t<label for=\"clan\">Clan (optional): </label>\n\t\t\t<select name=\"clan\" id=\"clan\" onChange={this.handleNameUpdate.bind(this)}>\n\t\t\t\t{CLANS.map(CLANS =>\n\t\t\t\t\t<option value={CLANS}>{CLANS}</option>\n\t\t\t\t)}\n\t\t\t</select>\n\t\t\t<br/>\n\t\t\t\n\t\t\t<h2 style={{color: this.state.nation}}>\n\t\t\t\t{this.state.clan}<br/>\n\t\t\t\tWins : Losses<br/>\n\t\t\t\t{this.state.wins} : {this.state.losses}<br/>\n\t\t\t\tWin Rate: {this.state.wins==0?0:((this.state.wins*100/(this.state.wins+this.state.losses)).toFixed(2))}%\n\t\t\t</h2>\n\t\t\t\tClan Level: {this.state.level}<br/>\n\t\t\t\tCurrent experience: {this.state.curExp}<br/>\n\t\t\t\tTotal experience: {this.state.totalExp}<br/>\n\t\t</div>\n\t\t);\n  }\n\n}\n\nexport default Calc;\n","import React, { Component } from 'react'\nimport './App.css';\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header\" >\n\t\t\t\t<h1>Cardfight!! Vanguard ZERO<br/>Win Rate Calculator</h1>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport Author from './Author';\nimport Guide from './Guide';\nimport Calc from './Calc';\nimport Header from './Header';\nimport './App.css';\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Author/>\n\t\t\t\t<Header/>\n\t\t\t\t<Calc/>\n\t\t\t\t<Guide/>\n\t\t\t</div>\n\t\t)\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}